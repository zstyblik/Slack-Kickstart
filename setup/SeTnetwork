#!/bin/sh
# /usr/lib/setup/SeTnetwork
#
# Slack-Kickstart-ng
#
# Origin: 13/05/2006 by vonatar(http://www.slack-kickstart.org)
#
#--------------------------------------------
# Adds ntpdate at boot
# Sets Hostname
# Sets ntpdate at boot
# Sets network parameters at boot
# Sets Nameservers info
#--------------------------------------------
#
# include config file
#
. /etc/Kickstart.cfg

# Adds ntpdate at boot
if [ ! -d /mnt/etc/rc.d/ ]; then
	mkdir -p /mnt/etc/rc.d
fi

if [ "${NTPHOST}" ]; then
	printf "\n# ntpdate at boot time\n" >> /mnt/etc/rc.d/rc.local
	printf "/usr/sbin/ntpdate -s %s && /sbin/hwclock --%s --systohc"\
		"${NTPHOST}" "${HWCLOCK}" >> /mnt/etc/rc.d/rc.local
	if [ -d /mnt/etc/cron.hourly ]; then
		cat > /mnt/etc/cron.hourly/ntp.sh << EON
#!/bin/sh
# Synchronize time from NTP server
/usr/sbin/ntpdate -s ${NTPHOST} && /sbin/hwclock --${HWCLOCK} --systohc
EON

		chmod +x /mnt/etc/cron.hourly/ntp.sh
	fi # if -d /mnt/etc...
fi # if $NTPHOST

# Network Configuration
printf -- "%s\n" "${HOSTNAME}" > /mnt/etc/HOSTNAME
cp /mnt/etc/rc.d/rc.inet1.conf /mnt/etc/rc.d/rc.inet1.conf.orig

# Network configuration: 
# a new etc/rc.d/rc.inet1.conf is created 
# based on /etc/Kickstart.cfg network parameters
# but first, we need to assign the correct value,
# depending on $ETH
awk -f /usr/lib/setup/GetNetSettings.awk \
	/etc/Kickstart.cfg > "${TMP}/NetworkSettings"
#
rm -f "${TMP}/Nameservers"
for NS in $(grep -E -e '^NAMESERVER=' "${TMP}/NetworkSettings" | \
	cut -d '=' -f 2); do
	printf "nameserver %s" "${NS}" >> "${TMP}/Nameservers"
done # for NS
#
if [ -e "${TMP}/NetworkSettings" ]; then
	cut -d ',' -f 2- "${TMP}/NetworkSettings" > "${TMP}/NetworkSettings.sh"
	. "${TMP}/NetworkSettings.sh"
fi
IFNAME0=${IFNAME0:-""}
INET0=${INET0:-""}
MASK0=${MASK0:-""}
DHCP0=${DHCP0:-""}
DHCPHOSTNAME0=${DHCPHOSTNAME0:-""}
#
IFNAME1=${IFNAME1:-""}
INET1=${INET1:-""}
MASK1=${MASK1:-""}
DHCP1=${DHCP1:-""}
DHCPHOSTNAME1=${DHCPHOSTNAME1:-""}
#
IFNAME2=${IFNAME2:-""}
INET2=${INET2:-""}
MASK2=${MASK2:-""}
DHCP2=${DHCP2:-""}
DHCPHOSTNAME2=${DHCPHOSTNAME2:-""}
#
IFNAME3=${IFNAME3:-""}
INET3=${INET3:-""}
MASK3=${MASK3:-""}
DHCP3=${DHCP3:-""}
DHCPHOSTNAME3=${DHCPHOSTNAME3:-""}
#
GW=${GW:-""}

# TODO ~ this is really not good, since it's not universal enough.
cat << EOP > /mnt/etc/rc.d/rc.inet1.conf
# /etc/rc.d/rc.inet1.conf
#
# This file contains the configuration settings for network interfaces.
# If USE_DHCP[interface] is set to "yes", this overrides any other settings.
# If you don't have an interface, leave the settings null ("").

# You can configure network interfaces other than eth0,eth1... by setting
# IFNAME[interface] to the interface's name. If IFNAME[interface] is unset
# or empty, it is assumed you're configuring eth<interface>.

# Several other parameters are available, the end of this file contains a
# comprehensive set of examples.

# =============================================================================
# Config information for eth0:
IPADDR[0]="${INET0}"
NETMASK[0]="${MASK0}"
USE_DHCP[0]="${DHCP0}"
DHCP_HOSTNAME[0]="${DHCPHOSTNAME0}"

# Config information for eth1:
IPADDR[1]="${INET1}"
NETMASK[1]="${MASK1}"
USE_DHCP[1]="${DHCP1}"
DHCP_HOSTNAME[1]="${DHCPHOSTNAME1}"

# Config information for eth2:
IPADDR[2]="${INET2}"
NETMASK[2]="${MASK2}"
USE_DHCP[2]="${DHCP2}"
DHCP_HOSTNAME[2]="${DHCPHOSTNAME2}"

# Config information for eth3:
IPADDR[3]="${INET3}"
NETMASK[3]="${MASK3}"
USE_DHCP[3]="${DHCP3}"
DHCP_HOSTNAME[3]="${DHCPHOSTNAME3}"

# Default gateway IP address:
GATEWAY="${GW}"

# Change this to "yes" for debugging output to stdout.  Unfortunately,
# /sbin/hotplug seems to disable stdout so you'll only see debugging output
# when rc.inet1 is called directly.
DEBUG_ETH_UP="no"

## Example config information for wlan0.  Uncomment the lines you need and fill
## in your info.  (You may not need all of these for your wireless network)
#IFNAME[4]="wlan0"
#IPADDR[4]=""
#NETMASK[4]=""
#USE_DHCP[4]="yes"
#DHCP_HOSTNAME[4]="icculus-wireless"
#DHCP_KEEPRESOLV[4]="yes"
#DHCP_KEEPNTP[4]="yes"
#DHCP_KEEPGW[4]="yes"
#DHCP_IPADDR[4]=""
#WLAN_ESSID[4]=BARRIER05
#WLAN_MODE[4]=Managed
##WLAN_RATE[4]="54M auto"
##WLAN_CHANNEL[4]="auto"
##WLAN_KEY[4]="D5AD1F04ACF048EC2D0B1C80C7"
##WLAN_IWPRIV[4]="AuthMode=WPAPSK EncrypType=TKIP WPAPSK=7B1ABEEB5D197741923ED26727569C365E31212096A0EAFAD563B268BAD01CAF TxRate=0"
#WLAN_WPA[4]="wpa_supplicant"
#WLAN_WPADRIVER[4]="ndiswrapper"

## Some examples of additional network parameters that you can use.
## Config information for wlan0:
#IFNAME[4]="wlan0"              # Use a different interface name nstead of
                                # the default 'eth4'
#HWADDR[4]="00:01:23:45:67:89"  # Overrule the card's hardware MAC address
#MTU[4]=""                      # The default MTU is 1500, but you might need
                                # 1360 when you use NAT'ed IPSec traffic.
#DHCP_KEEPRESOLV[4]="yes"       # If you dont want /etc/resolv.conf overwritten
#DHCP_KEEPNTP[4]="yes"          # If you don't want ntp.conf overwritten
#DHCP_KEEPGW[4]="yes"           # If you don't want the DHCP server to change
                                # your default gateway
#DHCP_IPADDR[4]=""              # Request a specific IP address from the DHCP
                                # server
#WLAN_ESSID[4]=DARKSTAR         # Here, you can override _any_ parameter
                                # defined in rc.wireless.conf, by prepending
                                # 'WLAN_' to the parameter's name. Useful for
                                # those with multiple wireless interfaces.
#WLAN_IWPRIV[4]="AuthMode=WPAPSK EncrypType=TKIP WPAPSK=thekey TxRate=0"
                                # Some drivers require a private ioctl to be
                                # set through the iwpriv command. If more than
                                # one is required, you can place them in the
                                # IWPRIV parameter (space-separated, see the
                                # example).
EOP

# Set Nameservers and Hostname in /etc/hosts
if [ "${DHCP0}" != "yes" ]; then
	cat "${TMP}/Nameservers" >> /mnt/etc/resolv.conf
	printf "%s		%s %s.%s\n" ${INET0} ${HOSTNAME} ${HOSTNAME} \
		${DOMAIN}>> /mnt/etc/hosts
else
	# Needed for Autoupdates & post-install.sh
	if [ -e /etc/resolv.conf ]; then
		cat /etc/resolv.conf > /mnt/etc/resolv.conf
	fi # if [ -e /etc/resolv.conf
fi # if [ "${DHCP0}" != "yes" ]
