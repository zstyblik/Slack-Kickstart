#!/bin/sh
#
# Copyright 1993,1994,1999 Patrick Volkerding, Moorhead, Minnesota USA
# Copyright 2001 Slackware Linux, Inc., Concord, CA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is 
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# As always, bug reports, suggestions, etc: volkerdi@slackware.com
#
# Modified for
# Slack-Kickstart-ng
#
# Origin: 20/09/2006 vonatar(http://www.slack-kickstart.org)
#
# includes common functions
. /usr/lib/setup/include/functions.inc
if [ ! -d "${TMP}" ]; then
	if ! mkdir -p "${TMP}"; then
		printf "FATAL ERROR - create TMP dir '%s'.\n" "${TMP}" |\
			tee -a "${FH_LOG}"
		FireBugInfo
		exit 1
	fi
fi
# Set env variables, set PATH
PATH="$PATH:/usr/lib/setup"
export PATH

clear

printf "\n##########################\n" | tee -a "${FH_LOG}"
printf "# Starting installation! #\n" | tee -a "${FH_LOG}"
printf "##########################\n\n" | tee -a "${FH_LOG}"
# Get TAG list first, because there is no point to continue on fail.
printf "Getting TAG list ..." | tee -a "${FH_LOG}"
if ! Get_Tag_List "${TAG}" || [ ! -s "${TMP}/taglist" ]; then
	printf " [FAILED]\n\n" | tee -a "${FH_LOG}"
	printf "FATAL ERROR - unable to fetch TAG list - Aborting.\n" |\
		tee -a "${FH_LOG}"
	FireBugInfo
	exit 1
fi # if ! Get_Tag_List ...
printf " [OK]\n" | tee -a "${FH_LOG}"
# Run pre-installation scripts, if any.
if [ -n "${PREINST}" ]; then
	IFS=','
	for PRESCRIPT in "${PREINST}"; do
		if [ ! -e "/etc/pre-install/${PRESCRIPT}" ]; then
			printf \
				"Pre-install script '%s' doesn't seem to exist.\n" \
				"${PRESCRIPT}" | tee -a "${FH_LOG}"
			continue
		fi # if [ ! -e ...
		/etc/pre-install/${PRESCRIPT}
	done # for PRESCRIPT
fi # if [ -n "${PREINST}" ]

# Creates - FSList, MPList, SFDiskPartList, fstab
awk -f /usr/lib/setup/GetPartitions.awk /etc/Kickstart.cfg > "${TMP}/Partitions"
if [ ! -s "${TMP}/Partitions" ]; then
	printf "FATAL ERROR - Failed to parse out parition info." |\
		tee -a "${FH_LOG}"
	FireBugInfo
	exit 1
fi
#
Create_Fstab
#
# The only way i've found to exit installer
# if something goes wrong, is to run an
# install script only if exit status of
# previous is 0; could someone point me to
# an alternative and more elegant way ?
# 
# - Creates partitions
# - Formats filesystem & mounts partitions
# - Downloads and installs packages
# - Creates lilo.conf and installs lilo.
# - Sets network parameters
#

CreatePartitions && SeTpartitions && Raptor && SeTlilo && SeTnetwork && SeTconfig

if [ ! -e "${TMP}/Kickstart.END" ]; then
	printf "Installation ended with ERROR." | tee -a "${FH_LOG}"
	FireBugInfo
	exit 1
fi # if [ ! -e "${TMP}/Kickstart.END" ]
# If exit status is OK run final tasks
# Cleanup
rm -rf /mnt/usr/Download
rm -f /mnt/etc/mtab
rm -f /mnt/PkgList.txt
rm -f /mnt/CHECKSUMS.md5
# Run postinstall script
if [ -s /etc/postinstall.sh ]; then
	cp /etc/postinstall.sh /mnt/postinstall.sh
	chmod +x /mnt/postinstall.sh
	chroot /mnt /postinstall.sh
	rm /mnt/postinstall.sh
fi
if [ -n "${POSTINST}" ]; then
	IFS=','
	for POSTSCRIPT in ${POSTINST}; do
		if [ ! -e "/etc/post-install/${POSTSCRIPT}" ]; then
			printf \
				"Post-install script '%s' doesn't seem to exist.\n" \
				"${POSTSCRIPT}" | tee -a "${FH_LOG}"
			continue
		fi # if ! -e ...
		cp -ap /etc/post-install/${POSTSCRIPT} /mnt
		chmod +x /mnt/${POSTSCRIPT}
		chroot /mnt ./${POSTSCRIPT} || true
		rm -f /mnt/${POSTSCRIPT}
	done # for POSTSCRIPT
	IFS=''
fi # if -n POSTSCRIPT
# Installation ends!
printf "Installation complete.\n\n\a" | tee -a "${FH_LOG}"
# Eject CD-Rom before reboot
if [ -s "${TMP}/CDROM" ] && [ -x /bin/eject ]; then
	/bin/eject $(cat "${TMP}/CDROM")
fi
# If AUTOSTART=yes umounts all partitions and reboots the system
if [ "$AUTOSTART" = "yes" ]; then
	umount -a
	printf "Rebooting system in 5 seconds!!!\n" | tee -a "${FH_LOG}"
	sleep 5
	reboot
else
	printf "\nYou can reboot now\n\n" | tee -a "${FH_LOG}"
fi # if [ "${AUTOSTART}" = "yes" ]
# end slackware setup script
# EOF
