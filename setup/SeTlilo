#!/bin/sh
#
# /usr/lib/setup/SeTlilo
#
# Slack-Kickstart 10.2
#
# comments to: vonatar@slack-kickstart.org
# http://www.slack-kickstart.org
#
# Last Revision: 05/08/2006 by vonatar
#
#
#------------------------------------------
# Creates lilo.conf
# Installs lilo
#------------------------------------------
#
# includes common functions
. /usr/lib/setup/include/functions.inc
#
awk -f /usr/lib/setup/GetBootinfo.awk /etc/Kickstart.cfg > /tmp/Bootinfo
# Moving created fstab to destination disk
mv /tmp/fstab /mnt/etc/fstab
touch /mnt/etc/mtab
LOCATION=$(grep -e '^LOCATION=' /tmp/Bootinfo | cut -d '=' -f 2)
# Note: this is for PXE boots which won't need any bootloader
if [ ! -e /mnt/sbin/lilo ] || [ ! -x /mnt/sbin/lilo ] \
	|| [ "${LOCATION}" = 'none' ]; then
	printf "\nLILO not found or not executable.\n"
	printf "You forgot to install LILO or installing PXE machine.\n"
	printf "Skipping LILO installation.\n\n"
	exit 0
fi # if [ ! -e /mnt/sbin/lilo
#
# If kernel name is 'bzImage'
# it's better to rename it as:
#
# vmlinuz-version
#
if [ ! -d /mnt/boot ]; then
	mkdir /mnt/boot
fi
if [ "${KERN}" = "bzImage" ]; then 
	KVERSION=$(uname -a | cut -d " " -f 3)
	KNAME="vmlinuz-${KVERSION}"
	mv "/mnt/boot/${KERN}" "/mnt/boot/${KNAME}"
else
	KNAME="${KERN}"
fi # if [ "${KERN}" ...

if [ -z "${ROOTPART}" ]; then
	ROOTPART=$(Get_Root_Partition)
	if [ -z "${ROOTPART}" ]; then
		printf "\nRoot Partition not set - Aborting.\n"
		FireBugInfo
		exit 1
	fi # if [ -z "${ROOTPART}" ]
fi # if [ -z "${ROOTPART}" ]
BOOTDEV=$(grep -e '^BOOTDEV=' /tmp/Bootinfo | cut -d '=' -f 2)
if [ -z "${BOOTDEV}" ]; then
	BOOTDEV=$(cut -d ':' -f 1 /tmp/Partitions | head -n 1)
	if [ -z "${BOOTDEV}" ]; then
		printf "\nBOOTDEV not found. Unable to install LILO.\n\n"
		FireBugInfo
		exit 1
	fi # if [ -z "${BOOTDEV}" ]
fi # if [ -z "${BOOTDEV}" ]
#
# Makes the first partition bootable. Change only the single partition indicated. 
# For example:
#  % sfdisk /dev/hdb -N5
#  ,,,*
echo ",,,*" | sfdisk --force ${BOOTDEV} -N1 > ${REDIR} 2>&1
#------------------------------------------
# Creates lilo.conf
#------------------------------------------
# image = /boot/${KNAME}
cat << EOF1 > /mnt/etc/lilo.conf
# LILO configuration file
# 
#
# Start LILO global section
boot = ${BOOTDEV}
EOF1
# FIX/Workaround to boot from VirtIO disks
for VDD in $(cut -d ':' -f 1 /tmp/Partitions | \
	grep -E -e '/dev/vd[a-z]+' | sort | uniq); do
	printf "disk=${VDD} bios=0x80 max-partitions=7\n" >> /mnt/etc/lilo.conf
	cp -apr ${VDD}* /mnt/dev/
done # for VDD

cat << EOF2 >> /mnt/etc/lilo.conf
lba32
#compact        # faster, but won't work on all systems.
prompt
#serial = 0,9600n8

timeout = 300
default = linux
# Normal VGA console
vga = normal
#ramdisk = 0     # paranoia setting
# End LILO global section
# Linux bootable partition config begins
image = /boot/vmlinuz
  root = ${ROOTPART}
  label = linux
  read-only # Non-UMSDOS filesystems should be mounted read-only for checking
# Insert other images here

# Linux bootable partition config ends
EOF2
#-----------------------------------------
#
# Installs lilo
#
clear
printf "###################\n"
printf "# Installing LILO #\n"
printf "###################\n"
if ! chroot /mnt /sbin/lilo -v 1>/dev/null 2>"${REDIR}" ; then
	printf "\nFATAL ERROR installing lilo! - Aborting\n"
	FireBugInfo
	exit 1
else
	printf "\nInstalled.\n\n"
	sleep 1
fi # if ! chroot /mnt ...
# EOF
