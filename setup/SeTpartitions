#!/bin/sh
#
# SeTpartition user-friendly rewrite Fri Dec 15 13:17:40 CST 1995 pjv
# Rewrite to support filesystem plugins <david@slackware.com>, 07-May-2001
# Don't use plugins, make it work, pjv, 18-May-2001.
#
# Modified for Slack-Kickstart 10.2
#
# Last Revision: 19/09/2005 by vonatar
#
# Comments to: vonatar@slack-kickstart.org
# http://sourceforge.net/projects/slack-kickstart/
#
# includes common functions
. /usr/lib/setup/include/functions.inc
. /usr/lib/setup/include/filesystem.inc
#########################################################
#                                                       #
#	FORMATTING PARTITIONS                                 #
#                                                       #
#########################################################
#
# Getting the list of Linux partitions
# and formatting them with the choosen 
# filesystem.
#
printf "Going to format partitions.\n"
for DEVLINE in $(cat /tmp/Partitions); do
	FS=$(printf "%s" "${DEVLINE}" | awk -F':' '{ print $4 }')
	# see if this partition has a filesystem associated
	case "$FS" in
		'xfs')
			COMMAND="make_xfs"
			;;
		'jfs')
			COMMAND="make_jfs"
			;;
		'reiserfs')
			COMMAND="make_reiserfs"
			;;
		'ext3')
			COMMAND="make_ext3"
			INODES=4096
			CHECK="n"
			;;
		'swap')
			COMMAND="make_swap" 
			INODES=""
			CHECK=""
			;;
		*)
			COMMAND="make_ext2"
			INODES=4096
			CHECK="n"
	esac
	DEVICE=$(printf "%s" "${DEVLINE}" | cut -d ':' -f 1)
	DEVICE=$(Check_Smart_Array "${DEVICE}")
	PARTITION_DEVICE=$(printf "%s" "${DEVLINE}" | cut -d ':' -f 2)
	PARTITION_DEVICE="${DEVICE}${PARTITION_DEVICE}"

	printf "${PARTITION_DEVICE} [${FS}] ..... "
	if $COMMAND ${PARTITION_DEVICE} ${INODES} ${CHECK} ; then
		printf "\t[ OK ]\n"
	else
		printf "\t[FAIL]\n"
		printf "\nFATAL ERROR formatting %s - Aborting\n" "${PARTITION_DEVICE}"
		echo "HINT: Check tty4 for errors during format."
		FireBugInfo
		exit 1
	fi # if $COMMAND $PARTITION ...
done # for DEVLINE
#
# Now, we MUST mount root partition on /mnt
if [ ! -d /mnt ]; then
	mkdir /mnt
fi # if [ ! -d /mnt ]
ROOTPART=${ROOTPART:-''}
if [ -z "${ROOTPART}" ]; then
	ROOTPART=$(Get_Root_Partition)
	if [ -z "${ROOTPART}" ]; then
		printf "Root partition not set - Aborting.\n"
		FireBugInfo
		exit 1
	fi # if [ -z "${ROOTPART}" ]
fi # if [ -z "${ROOTPART}" ]
#
# Check if we can mount ROOTPART.
if ! mount "${ROOTPART}" /mnt ; then
	printf "\nFATAL ERROR mounting root partition %s - Aborting\n" "${ROOTPART}"
	printf "HINT: Check tty4 for errors.\n"
	FireBugInfo
	exit 1
fi # if ! mount "${ROOTPART}"

for DEVLINE in $(cat /tmp/Partitions | cut -d ':' -f 1-3); do
	MOUNTPOINT=$(printf "%s\n" "${DEVLINE}" | cut -d ':' -f 3)
	MOUNTPARSED=$(printf "%s\n" "${DEVLINE}" | cut -d ':' -f 2)
	DEVICE=$(printf "%s\n" "${DEVLINE}" | cut -d ':' -f 1)
	MOUNT_DEVICE="${DEVICE}${MOUNTPARSED}"
	
	if [ "${MOUNT_DEVICE}" = ${ROOTPART} ]; then
		continue
	fi # if [ "${MOUNT_DEVICE}" ...

	if [ "${MOUNTPOINT}" = "swap" ]; then
		# Activate swap partition(s)
		/sbin/swapon "${MOUNT_DEVICE}" > "${REDIR}" 2>&1
		continue
	fi # if [ "${MOUNTPOINT}" ...
	mkdir -p "/mnt${MOUNTPOINT}"
	mount "${MOUNT_DEVICE}" "/mnt${MOUNTPOINT}"
done # for DEVLINE 
# EOF
